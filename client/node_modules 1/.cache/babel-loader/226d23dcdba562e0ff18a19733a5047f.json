{"ast":null,"code":"var _jsxFileName = \"/Users/katejewett-williams/flatiron_school/projects/React_Redux_Project/recipe-box/client/src/components/recipes/Recipe.js\";\nimport React from \"react\";\nimport MainHeader from \"../layout/MainHeader\";\nimport MainFooter from \"../layout/MainFooter\";\nimport RecipeHeader from \"./RecipeHeader\";\nimport RecipeMain from \"./RecipeMain\";\nimport { connect } from 'react-redux'; //import { fetchRecipes } from '../../actions/recipeActions'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Recipe extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (!this.props.recipe) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe\",\n            children: [/*#__PURE__*/_jsxDEV(RecipeHeader, {\n              recipeName: this.props.recipe.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(RecipeMain, {\n              recipeDescription: this.props.recipe.description,\n              recipeDirections: this.props.recipe.directions,\n              img: this.props.recipe.img,\n              ingredients: this.props.recipe.ingredients\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MainFooter, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.handleLoading()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n} //function mapDispatchToProps(dispatch) {\n//return { fetchRecipes: () => dispatch(fetchRecipes()) }\n//}\n\n\nfunction mapStateToProps(state, ownProps) {\n  let recipe = {\n    name: '',\n    img: '',\n    description: '',\n    directions: '',\n    ingredients: []\n  };\n  console.log(ownProps.prams); //const recipeId = ownProps.params.id;\n  //if (state.recipes.length > 0) {\n  //recipe = Object.assign({}, state.recipes.find(recipe => recipe.id == recipeId))\n  //}\n  //return {recipe: recipe};\n  //const id = ownProps.match.params.recipeId\n  //const recipes = state.recipes.recipes\n  //const recipe = recipes ? recipes[id -1] : null\n  //return {recipe: recipe}\n}\n\nexport default connect(mapStateToProps)(Recipe); //export default Recipe;","map":{"version":3,"sources":["/Users/katejewett-williams/flatiron_school/projects/React_Redux_Project/recipe-box/client/src/components/recipes/Recipe.js"],"names":["React","MainHeader","MainFooter","RecipeHeader","RecipeMain","connect","Recipe","Component","handleLoading","props","recipe","name","description","directions","img","ingredients","render","mapStateToProps","state","ownProps","console","log","prams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;;;AAGA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAMjCC,aANiC,GAMjB,MAAM;AAClB,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAuB;AACnB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEM;AACF,4BACI;AAAA,kCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEQ;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACI,QAAC,YAAD;AACI,cAAA,UAAU,EAAI,KAAKD,KAAL,CAAWC,MAAX,CAAkBC;AADpC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,UAAD;AACI,cAAA,iBAAiB,EAAI,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,WAD3C;AAEI,cAAA,gBAAgB,EAAI,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,UAF1C;AAGI,cAAA,GAAG,EAAI,KAAKJ,KAAL,CAAWC,MAAX,CAAkBI,GAH7B;AAII,cAAA,WAAW,EAAI,KAAKL,KAAL,CAAWC,MAAX,CAAkBK;AAJrC;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,eAaI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAiBH;AACJ,KA5BgC;AAAA;;AA8BjCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKR,aAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AApCgC,C,CAuCrC;AACI;AACJ;;;AAEA,SAASS,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAAyC;AACrC,MAAIT,MAAM,GAAG;AAACC,IAAAA,IAAI,EAAE,EAAP;AAAWG,IAAAA,GAAG,EAAE,EAAhB;AAAoBF,IAAAA,WAAW,EAAE,EAAjC;AAAqCC,IAAAA,UAAU,EAAE,EAAjD;AAAqDE,IAAAA,WAAW,EAAE;AAAlE,GAAb;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,KAArB,EAFqC,CAGrC;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,eAAejB,OAAO,CAACY,eAAD,CAAP,CAA0BX,MAA1B,CAAf,C,CAEA","sourcesContent":["import React from \"react\"\nimport MainHeader from \"../layout/MainHeader\"\nimport MainFooter from \"../layout/MainFooter\"\nimport RecipeHeader from \"./RecipeHeader\"\nimport RecipeMain from \"./RecipeMain\"\nimport { connect } from 'react-redux'\n//import { fetchRecipes } from '../../actions/recipeActions'\n\n\nclass Recipe extends React.Component {\n\n    //componentDidMount() {\n        //this.props.fetchRecipes()\n    //}\n\n    handleLoading = () => {\n        if (!this.props.recipe){\n            return <div>Loading ...</div>\n        } else{\n            return(\n                <div>\n                    <MainHeader />\n                        <div className=\"recipe\">\n                            <RecipeHeader\n                                recipeName = {this.props.recipe.name} \n                            />\n                            <RecipeMain \n                                recipeDescription = {this.props.recipe.description}\n                                recipeDirections = {this.props.recipe.directions}\n                                img = {this.props.recipe.img}\n                                ingredients = {this.props.recipe.ingredients}\n                            />\n                        </div>\n                    <MainFooter />\n                </div>\n            )\n        }\n    }\n\n    render() { \n        return(\n            <div>\n                {this.handleLoading()}\n            </div>\n        )\n    }\n}\n\n//function mapDispatchToProps(dispatch) {\n    //return { fetchRecipes: () => dispatch(fetchRecipes()) }\n//}\n\nfunction mapStateToProps(state, ownProps){\n    let recipe = {name: '', img: '', description: '', directions: '', ingredients: []}\n    console.log(ownProps.prams)\n    //const recipeId = ownProps.params.id;\n    //if (state.recipes.length > 0) {\n        //recipe = Object.assign({}, state.recipes.find(recipe => recipe.id == recipeId))\n    //}\n    //return {recipe: recipe};\n    //const id = ownProps.match.params.recipeId\n    //const recipes = state.recipes.recipes\n    //const recipe = recipes ? recipes[id -1] : null\n    //return {recipe: recipe}\n}\n\nexport default connect(mapStateToProps) (Recipe)\n\n//export default Recipe;"]},"metadata":{},"sourceType":"module"}