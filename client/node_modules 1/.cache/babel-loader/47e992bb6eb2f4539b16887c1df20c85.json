{"ast":null,"code":"var _jsxFileName = \"/Users/katejewett-williams/flatiron_school/projects/React_Redux_Project/recipe-box/client/src/components/tiles/TileFooter.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TileFooter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n      click: false\n    };\n    this.toggleHover = this.toggleHover.bind(this);\n    this.toggleClick = this.toggleClick.bind(this);\n  } //goToRecipe() {\n  //this.props.history.push(`/recipes/${this.props.recipeId}`)\n  //}\n\n\n  toggleHover() {\n    this.setState({\n      hover: !this.state.hover\n    });\n  }\n\n  toggleClick() {\n    this.setState({\n      click: !this.state.click\n    });\n  }\n\n  render() {\n    //const linkPath = `/recipes/${this.props.recipeId}`\n    let bookmarkStyle;\n\n    if (this.state.hover | this.state.click) {\n      bookmarkStyle = \"zmdi zmdi-bookmark zmdi-hc-2x btn-bookmark\";\n    } else {\n      bookmarkStyle = \"zmdi zmdi-bookmark-outline zmdi-hc-2x btn-bookmark\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"tile_footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: bookmarkStyle,\n        onMouseEnter: this.toggleHover,\n        onMouseLeave: this.toggleHover,\n        onClick: this.toggleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), this.props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TileFooter;\n/*\n\n\n\n<Toggle>\n            {({ on, toggle }) => (\n                <footer className=\"tile_footer\"> \n                {on && <Box toggle={toggle}\n                    recipeName={this.props.recipeName}\n                    recipeImg={this.props.recipeImg} \n                    recipeDirections={this.props.recipeDirections} \n                    recipeDescription={this.props.recipeDescription}\n                    ingredients={this.props.ingredients}\n                />}\n                \n\n                <i className={bookmarkStyle} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={this.toggleClick}/>\n                </footer>\n            )}\n        </Toggle> \n\n\n<Box \n                    recipeName={this.props.recipeName}\n                    recipeImg={this.props.recipeImg}\n                    recipeDescription={this.props.recipeDescription}\n                    recipeDirections={this.props.recipeDirections}\n                    ingredients={this.props.ingredients}\n                    recipeId={this.props.recipeId} />\n\nhandleClick = () => {\n        let recipeId = this.props.recipeId\n        this.props.history.push(`/recipes/${recipeId}`)\n        <Box />\n    }\n\n<footer className=\"tile_footer\"> \n                <button className=\"btn-primary\" onClick={this.props.handleClick}>\n                    <i className=\"zmdi zmdi-open-in-new zmdi-hc-lg btn-icon\" /> Open Recipe\n                </button>\n\n                <i className={bookmarkStyle} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover}/>\n            </footer>\n             \n            <footer className=\"tile_footer\"> \n            <button className=\"btn-primary\" onClick={this.handleClick(this.props.recipeId, this.props.recipeName)}>\n                <i className=\"zmdi zmdi-open-in-new zmdi-hc-lg btn-icon\" /> Open Recipe \n            </button>\n\n            <i className={bookmarkStyle} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={this.toggleClick}/>\n        </footer>\n            \n            \n            \n            \n            \n            */","map":{"version":3,"sources":["/Users/katejewett-williams/flatiron_school/projects/React_Redux_Project/recipe-box/client/src/components/tiles/TileFooter.js"],"names":["React","TileFooter","Component","constructor","props","state","hover","click","toggleHover","bind","toggleClick","setState","render","bookmarkStyle","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KADE;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH,GAToC,CAWrC;AACI;AAEJ;;;AAGAD,EAAAA,WAAW,GAAG;AACV,SAAKG,QAAL,CAAc;AAACL,MAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApB,KAAd;AACH;;AAEDI,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,CAAc;AAACJ,MAAAA,KAAK,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAApB,KAAd;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL;AACA,QAAIC,aAAJ;;AACA,QAAG,KAAKR,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWE,KAAjC,EAAwC;AACpCM,MAAAA,aAAa,GAAE,4CAAf;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,GAAE,oDAAf;AACH;;AAED,wBACI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAEA,aAAd;AAA6B,QAAA,YAAY,EAAE,KAAKL,WAAhD;AAA6D,QAAA,YAAY,EAAE,KAAKA,WAAhF;AAA6F,QAAA,OAAO,EAAE,KAAKE;AAA3G;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKN,KAAL,CAAWU,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAxCoC;;AA6CzC,eAAeb,UAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\n\nclass TileFooter extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false, \n            click: false,}\n        this.toggleHover = this.toggleHover.bind(this)\n        this.toggleClick = this.toggleClick.bind(this)\n    }\n\n    //goToRecipe() {\n        //this.props.history.push(`/recipes/${this.props.recipeId}`)\n\n    //}\n\n    \n    toggleHover() {\n        this.setState({hover: !this.state.hover})\n    }\n\n    toggleClick() {\n        this.setState({click: !this.state.click})\n    }\n\n    render() {\n        //const linkPath = `/recipes/${this.props.recipeId}`\n        let bookmarkStyle;\n        if(this.state.hover | this.state.click) {\n            bookmarkStyle= \"zmdi zmdi-bookmark zmdi-hc-2x btn-bookmark\"\n        } else {\n            bookmarkStyle= \"zmdi zmdi-bookmark-outline zmdi-hc-2x btn-bookmark\"\n        }\n\n        return (\n            <footer className=\"tile_footer\">\n                <i className={bookmarkStyle} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={this.toggleClick} />\n                {this.props.children}\n            </footer>\n        );\n    }\n}\n\n\n\nexport default TileFooter\n\n/*\n\n\n\n<Toggle>\n            {({ on, toggle }) => (\n                <footer className=\"tile_footer\"> \n                {on && <Box toggle={toggle}\n                    recipeName={this.props.recipeName}\n                    recipeImg={this.props.recipeImg} \n                    recipeDirections={this.props.recipeDirections} \n                    recipeDescription={this.props.recipeDescription}\n                    ingredients={this.props.ingredients}\n                />}\n                \n\n                <i className={bookmarkStyle} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={this.toggleClick}/>\n                </footer>\n            )}\n        </Toggle> \n\n\n<Box \n                    recipeName={this.props.recipeName}\n                    recipeImg={this.props.recipeImg}\n                    recipeDescription={this.props.recipeDescription}\n                    recipeDirections={this.props.recipeDirections}\n                    ingredients={this.props.ingredients}\n                    recipeId={this.props.recipeId} />\n\nhandleClick = () => {\n        let recipeId = this.props.recipeId\n        this.props.history.push(`/recipes/${recipeId}`)\n        <Box />\n    }\n\n<footer className=\"tile_footer\"> \n                <button className=\"btn-primary\" onClick={this.props.handleClick}>\n                    <i className=\"zmdi zmdi-open-in-new zmdi-hc-lg btn-icon\" /> Open Recipe\n                </button>\n\n                <i className={bookmarkStyle} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover}/>\n            </footer>\n             \n            <footer className=\"tile_footer\"> \n            <button className=\"btn-primary\" onClick={this.handleClick(this.props.recipeId, this.props.recipeName)}>\n                <i className=\"zmdi zmdi-open-in-new zmdi-hc-lg btn-icon\" /> Open Recipe \n            </button>\n\n            <i className={bookmarkStyle} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={this.toggleClick}/>\n        </footer>\n            \n            \n            \n            \n            \n            */\n\n        "]},"metadata":{},"sourceType":"module"}