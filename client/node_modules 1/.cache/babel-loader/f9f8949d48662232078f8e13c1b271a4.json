{"ast":null,"code":"var _jsxFileName = \"/Users/katejewett-williams/flatiron_school/projects/React_Redux_Project/recipe-box/client/src/components/tiles/TileIndex.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Tile from './Tile';\nimport { fetchRecipes } from '../../actions/recipeActions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TileIndex extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Tile, {\n            recipes: this.props.recipes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchRecipes();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"tile-container\",\n        children: [this.handleLoading(), this.props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchRecipes: () => dispatch(fetchRecipes())\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    recipes: state.recipes.recipes,\n    loading: state.recipes.loading\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TileIndex);","map":{"version":3,"sources":["/Users/katejewett-williams/flatiron_school/projects/React_Redux_Project/recipe-box/client/src/components/tiles/TileIndex.js"],"names":["React","connect","Tile","fetchRecipes","TileIndex","Component","handleLoading","props","loading","recipes","componentDidMount","render","children","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,gCAA7B;;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAKpCC,aALoC,GAKpB,MAAM;AAClB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BACE;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE;AADtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD;AACF,KAjBiC;AAAA;;AACpCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWJ,YAAX;AACL;;AAgBCQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,mBACK,KAAKL,aAAL,EADL,EAEK,KAAKC,KAAL,CAAWK,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA5BmC;;AA+BxC,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AAAEX,IAAAA,YAAY,EAAE,MAAMW,QAAQ,CAACX,YAAY,EAAb;AAA9B,GAAP;AACH;;AAED,SAASY,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SAAO;AAACP,IAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,CAAcA,OAAxB;AACCD,IAAAA,OAAO,EAAEQ,KAAK,CAACP,OAAN,CAAcD;AADxB,GAAP;AAED;;AAEH,eAAeP,OAAO,CAACc,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CT,SAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Tile from './Tile'\nimport { fetchRecipes } from '../../actions/recipeActions.js'\n\nclass TileIndex extends React.Component {\n    componentDidMount() {\n        this.props.fetchRecipes()\n  }\n\n    handleLoading = () => {\n        if(this.props.loading) {\n          return <div>Loading...</div>\n        } else {\n          return(\n            <div>\n              <Tile\n                recipes={this.props.recipes}\n              />\n          </div> \n          )\n        }\n      }\n\n    render() {\n        return(\n            <div className='container'>\n                <main className=\"tile-container\">\n                    {this.handleLoading()}\n                    {this.props.children}\n                </main>\n            </div>\n        )    \n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return { fetchRecipes: () => dispatch(fetchRecipes()) }\n}\n\nfunction mapStateToProps(state){\n    return {recipes: state.recipes.recipes,\n            loading: state.recipes.loading}\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TileIndex);"]},"metadata":{},"sourceType":"module"}